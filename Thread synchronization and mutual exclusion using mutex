#include<stdio.h>
#include<pthread.h>
#include<semaphore.h>

sem_t mutex,writing;
int data = 0,rcount = 0;

void reader()
{
  int read_data;
  read_data = rand()%100;
  sem_wait(&mutex);
  rcount++;
  if(rcount==1)
   sem_wait(&writing);
  sem_post(&mutex);
  printf("Reader :%d is Reading %d\n",read_data,data);
 
  sem_wait(&mutex);
  rcount--;
  if(rcount==0)
   sem_post(&writing);
  sem_post(&mutex);
}

void writer()
{
  int write_data;
  write_data = rand()%100;
  sem_wait(&writing);
  data++;
  printf("Writer :%d is Writing %d\n",write_data,data);
 
  sem_post(&writing);
}

int main()
{
  int i,b; 
  pthread_t read_thread_id[10],write_thread_id[10];
  sem_init(&mutex,0,1);
  sem_init(&writing,0,1);
  for(i=0;i<10;i++)
  {
    pthread_create(&write_thread_id[i],NULL,writer,NULL);
    pthread_create(&read_thread_id[i],NULL,reader,NULL);
  }
  for(i=0;i<10;i++)
  {
    pthread_join(write_thread_id[i],NULL);
    pthread_join(read_thread_id[i],NULL);
  }
  return 0;
}
